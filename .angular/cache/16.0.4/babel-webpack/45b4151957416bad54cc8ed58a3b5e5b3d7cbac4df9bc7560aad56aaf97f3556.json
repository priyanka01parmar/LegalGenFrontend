{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor() {\n    // constructor(private googleAuthService: GoogleAuthService) {}\n    this.password = '';\n    this.passwordFieldType = 'password';\n  }\n  // onGoogleSignIn(): void {\n  //   this.googleAuthService.signInWithGoogle().then((googleUser: gapi.auth2.GoogleUser) => {\n  //     const idToken = googleUser.getAuthResponse().id_token;\n  //     // Call your backend API here and send the idToken\n  //     this.sendTokenToBackend(idToken);\n  //   }).catch((error: any) => {\n  //     console.error('Google Sign-In Error:', error);\n  //   });\n  // }\n  sendTokenToBackend(idToken) {}\n  togglePasswordVisibility() {\n    this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\n  }\n  login() {}\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","password","passwordFieldType","sendTokenToBackend","idToken","togglePasswordVisibility","login","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\PROMACT\\source\\repos\\Legal-AI\\legal-AI\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n//import { GoogleAuthService } from '../google-auth.service';\ninterface GoogleUser {\n  getAuthResponse(): { id_token: string };\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  // constructor(private googleAuthService: GoogleAuthService) {}\n\n  // onGoogleSignIn(): void {\n  //   this.googleAuthService.signInWithGoogle().then((googleUser: gapi.auth2.GoogleUser) => {\n  //     const idToken = googleUser.getAuthResponse().id_token;\n  //     // Call your backend API here and send the idToken\n  //     this.sendTokenToBackend(idToken);\n  //   }).catch((error: any) => {\n  //     console.error('Google Sign-In Error:', error);\n  //   });\n  // }\n\n  private sendTokenToBackend(idToken: string): void {\n    \n  }\n \n  password: string = '';\n  passwordFieldType: string = 'password';\n\n  togglePasswordVisibility() {\n    this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\n  }\n\n  login()\n{\n  \n}\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWzC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAA3BC,YAAA;IAEE;IAgBA,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,iBAAiB,GAAW,UAAU;EAUxC;EAzBE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEQC,kBAAkBA,CAACC,OAAe,GAE1C;EAKAC,wBAAwBA,CAAA;IACtB,IAAI,CAACH,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,KAAK,UAAU,GAAG,MAAM,GAAG,UAAU;EACtF;EAEAI,KAAKA,CAAA,GAGP;CACC;AA7BYP,cAAc,GAAAQ,UAAA,EAL1BT,SAAS,CAAC;EACTU,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWX,cAAc,CA6B1B;SA7BYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}